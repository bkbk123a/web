spring:
  datasource:
    url: jdbc:mysql://localhost:3306/mysql_web
    username: root
    password: root123!

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    open-in-view: true # OSIV 설정
    defer-datasource-initialization: true # script 파일이 hibernate 초기화 이후 동작하게 하기 위한 옵션

  sql:
    init:
      platform: mssql
      mode: always # 스크립트 동작 설정, always : 모든 데이터베이스에 sql스크립트 동작시킨다

  # html과 thymeleaf 로직 분리
  thymeleaf3.decoupled-logic: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 7cf5272185d1c02f0b7ff64c3bf9610e
            client-secret: PzxEon1M0ppH3H8zlHRAxmo4mEH7elTc
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao" #이 이름으로 해야함
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

oauth:
  naver:
    secret: Ucz6F7zlAB
    client-id: 8tJLZMOJa9yCZ9yV5Y57
    url:
      auth: https://nid.naver.com
      api: https://openapi.naver.com
      redirect: http://localhost:8080/login/naver-callback

jwt:
  secret-key: Z29uZ2NoZWNrLWdvbmdjaGVjay1nb25nY2hlY2stZ29uZ2NoZWNrCg123456789Z29uZ2NonY2hlY2stZ29uZ2NoZWNrCg123456789
  access_token_expire_milsec: 3600000  # 1시간
  refresh_token_expire_milsec: 3600000 # 1시간
  token_type: Bearer                   # 접속 토큰 타입

management:
  info:
    java:
      enabled: true
    os:
      enabled: true

  endpoints:
    web:
      exposure:
        include: "*"
        exclude: "env,beans"             # web 에 모든 엔드포인트를 노출하지만 env, beans 는 제외한다.

  endpoint:
    health:
      show-components: always             # 헬스 정보 상세히

springdoc:
  use-fqn: true                           # swagger 사용시 패키지가 다른 동일 클래스를 구별하지 못하는 이슈


---

spring:
  config.activate.on-profile: heroku
  datasource:
    url: ${JAWSDB_URL}          # id와 pwd가 이미 포함되어 있다.
  jpa.hibernate.ddl-auto: create
  sql.init.mode: always
